// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using outofoffice.App_code;

#nullable disable

namespace outofoffice.Migrations
{
    [DbContext(typeof(OOODbContext))]
    [Migration("20241203050440_table delete")]
    partial class tabledelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("outofoffice.Models.Company", b =>
                {
                    b.Property<Guid>("Company_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company_Nm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Company_ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("outofoffice.Models.Group", b =>
                {
                    b.Property<string>("Group_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("Company_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Group_Nm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Group_ID");

                    b.HasIndex("Company_ID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("outofoffice.Models.MessageAppList", b =>
                {
                    b.Property<Guid>("MAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Access_Token_Txt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Access_Token_User_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_Channels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("App_Nm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Company_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Group_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Publish_Immd_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MAID");

                    b.HasIndex("Group_ID");

                    b.ToTable("MessageAppLists");
                });

            modelBuilder.Entity("outofoffice.Models.UserAppConfig", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("App_Nm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Channels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Company_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Group_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserAppConfig");
                });

            modelBuilder.Entity("outofoffice.Models.UserAppMessage", b =>
                {
                    b.Property<Guid>("UAID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apps_To_Publish")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Company_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Group_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message_Txt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OOO_From_Dt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OOO_To_Dt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Publish_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UAID");

                    b.HasIndex("Group_ID");

                    b.ToTable("UserAppMessages");
                });

            modelBuilder.Entity("outofoffice.Models.Group", b =>
                {
                    b.HasOne("outofoffice.Models.Company", "Company")
                        .WithMany("Groups")
                        .HasForeignKey("Company_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("outofoffice.Models.MessageAppList", b =>
                {
                    b.HasOne("outofoffice.Models.Group", "Group")
                        .WithMany("MessageApps")
                        .HasForeignKey("Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("outofoffice.Models.UserAppMessage", b =>
                {
                    b.HasOne("outofoffice.Models.Group", "Group")
                        .WithMany("UserMessages")
                        .HasForeignKey("Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("outofoffice.Models.Company", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("outofoffice.Models.Group", b =>
                {
                    b.Navigation("MessageApps");

                    b.Navigation("UserMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
